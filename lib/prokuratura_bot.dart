import 'package:teledart/teledart.dart';
import 'package:teledart/telegram.dart';
import 'package:teledart/model.dart';
import 'package:dotenv/dotenv.dart';

void startBot() async {
  final env = DotEnv()..load();
  final botToken = env['BOT_TOKEN']!;
  final adminId = 1794743491;

  final telegram = Telegram(botToken);
  final me = await telegram.getMe();
  final teledart = TeleDart(botToken, Event(me.username!));
  final adminIds = [1794743491, 987654321]; // Admin Telegram ID lar

  final Map<int, List<dynamic>> adminReplyData = {};

  final userStates = <int, Map<String, dynamic>>{};
  teledart.start();

  final List<String> districts = [
    "–ñ–∏–∑–∑–∞—Ö —à–∞“≥–∞—Ä",
    "–ê—Ä–Ω–∞—Å–æ–π —Ç—É–º–∞–Ω–∏",
    "–ë–∞—Ö–º–∞–ª —Ç—É–º–∞–Ω–∏",
    "–î–æ ª—Å—Ç–ª–∏–∫ —Ç—É–º–∞–Ω–∏",
    "–§–æ—Ä–∏—à —Ç—É–º–∞–Ω–∏",
    "–ì ª–∞–ª–ª–∞–æ—Ä–æ–ª —Ç—É–º–∞–Ω–∏",
    "–ú–∏—Ä–∑–∞—á–æ ª–ª —Ç—É–º–∞–Ω–∏",
    "–ü–∞—Ö—Ç–∞–∫–æ—Ä —Ç—É–º–∞–Ω–∏",
    "–Ø–Ω–≥–∏–æ–±–æ–¥ —Ç—É–º–∞–Ω–∏",
    "–ó–∞—Ä–±–¥–æ—Ä —Ç—É–º–∞–Ω–∏",
    "–ó–∞—Ñ–∞—Ä–æ–±–æ–¥ —Ç—É–º–∞–Ω–∏",
    "–ó–æ–º–∏–Ω —Ç—É–º–∞–Ω–∏",
    "–®–∞—Ä–æ—Ñ –†–∞—à–∏–¥–æ–≤ —Ç—É–º–∞–Ω–∏",
  ];

  teledart.onCommand('start').listen((msg) async {
    final id = msg.chat.id;

    if (adminIds.contains(id)) {
      await teledart.sendMessage(
        id,
        'üëã –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª–≥–∞ —Ö—É—à –∫–µ–ª–∏–±—Å–∏–∑.',
        replyMarkup: ReplyKeyboardMarkup(
          keyboard: [
            [KeyboardButton(text: 'üì® –§–æ–π–¥–∞–ª–∞–Ω—É–≤—á–∏–≥–∞ –∂–∞–≤–æ–± –±–µ—Ä–∏—à')],
          ],
          resizeKeyboard: true,
          oneTimeKeyboard: false,
        ),
      );
    } else {
      userStates[msg.chat.id] = {'step': 'name', 'data': {}};
      teledart.sendMessage(
        msg.chat.id,
        'üëã –ê—Å—Å–∞–ª–æ–º –∞–ª–µ–∫—É–º! “≥—É—Ä–º–∞—Ç–ª–∏ —Ñ—É“õ–∞—Ä–æ, –ê—Ä–∏–∑–∞, —Ç–∞–∫–ª–∏—Ñ –≤–∞ –º—É—Ä–æ–∂–∞–∞—Ç–ª–∞—Ä–Ω–∏  —é–±–æ—Ä–∏—à —É—á—É–Ω –∏—Å–º‚Äë—Ñ–∞–º–∏–ª–∏—è–Ω–≥–∏–∑–Ω–∏ –∫–∏—Ä–∏—Ç–∏–Ω–≥:',
      );
    }
  });

  teledart.onCommand('reply').listen((msg) async {
    final id = msg.chat.id;

    if (!adminIds.contains(id)) {
      await teledart.sendMessage(id, '‚ùå –°–∏–∑–¥–∞ –±—É –±—É–π—Ä—É“õ —É—á—É–Ω —Ä—É—Ö—Å–∞—Ç —ë“õ.');
      return;
    }

    // Adminni foydalanuvchi ID kiritish bosqichiga o‚Äòtkazamiz
    userStates[id] = {'step': 'await_user_id'};
    adminReplyData[id] = [];

    await teledart.sendMessage(id,
        'üë§ –ñ–∞–≤–æ–± —é–±–æ—Ä–º–æ“õ—á–∏ –±—û–ª–≥–∞–Ω —Ñ—É“õ–∞—Ä–æ–Ω–∏–Ω–≥ –¢–µ–ª–µ–≥—Ä–∞–º –ò–î —Å–∏–Ω–∏ –∫–∏—Ä–∏—Ç–∏–Ω–≥:');
  });

  teledart.onMessage().listen((msg) async {
    final id = msg.chat.id;
    if (!userStates.containsKey(id)) return;

    final state = userStates[id]!;
    final step = state['step'];

    final data = (state['data'] as Map?)?.cast<String, dynamic>() ?? {};
    state['data'] = data;

    if (adminIds.contains(id)) {
      if (msg.text == 'üì® Fuqaroga javob berish') {
        userStates[id] = {'step': 'await_user_id'};
        adminReplyData[id] = [];
        await teledart.sendMessage(
            id, 'üÜî –§—É“õ–∞—Ä–æ–Ω–∏–Ω–≥ —Ç–µ–ª–µ–≥—Ä–∞–º –ò–î —Å–∏–Ω–∏ –∫–∏—Ä–∏—Ç–∏–Ω–≥:');
        return;
      }
      // Admin ID yuborgan bo‚Äòlsa
      if (userStates[id]?['step'] == 'await_user_id') {
        print("await_user_id");
        final targetId = int.tryParse(msg.text ?? '');
        if (targetId != null) {
          try {
            userStates[id]!['step'] = 'replying';
            userStates[id]!['target'] = targetId;

            print("‚úÖ targetId qabul qilindi: $targetId");

            await teledart.sendMessage(
              id,
              '‚úçÔ∏è –§—É“õ–∞—Ä–æ–≥–∞ –º–∞—Ç–Ω–∏ –≤–∞ –º–µ–¥–∏–∞ —é–±–æ—Ä–∏–Ω–≥. –¢—É–≥–∞—Ç–∏—à —É—á—É–Ω "‚úÖ –î–æ–Ω–µ" —Ç—É–≥–º–∞—Å–∏–Ω–∏ –±–æ—Å–∏–Ω–≥.',
              replyMarkup: ReplyKeyboardMarkup(
                keyboard: [
                  [KeyboardButton(text: '‚úÖ Done')],
                ],
                resizeKeyboard: true,
                oneTimeKeyboard: true,
              ),
            );
          } catch (e) {
            await teledart.sendMessage(
                id, '‚ùå –ë—É –ò–î –±—û–π–∏—á–∞ —Ñ—É“õ–∞—Ä–æ–≥–∞ —ë–∑–∏–± –±—û–ª–º–∞–¥–∏, “õ–∞–π—Ç–∞ —É—Ä—É–Ω–∏–± –∫—û—Ä–∏–Ω–≥');
            print('‚ùå sendMessage xatolik: $e');
          }
        } else {
          await teledart.sendMessage(id, '‚ùå –ò–î –Ω–æ—Ç—û“ì—Ä–∏ –∫–∏—Ä–∏—Ç–∏–ª–∞—è–ø–¥–∏.');
        }

        return;
      }

// Admin javob yozish jarayonida
      if (userStates[id]?['step'] == 'replying') {
        final target = userStates[id]!['target'];

        if (msg.text?.toLowerCase() == '‚úÖ done' ||
            msg.text?.toLowerCase() == 'done') {
          for (var item in adminReplyData[id]!) {
            if (item is String) {
              await teledart.sendMessage(target, '‚úâÔ∏è –ê–¥–º–∏–Ω–¥–∞–Ω:\n$item');
            } else if (item is Message) {
              if (item.photo != null) {
                await teledart.sendPhoto(
                  target,
                  item.photo!.last.fileId,
                  caption: '‚úâÔ∏è –ê–¥–º–∏–Ω–¥–∞–Ω:',
                );
              } else if (item.document != null) {
                await teledart.sendDocument(
                  target,
                  item.document!.fileId,
                  caption: '‚úâÔ∏è –ê–¥–º–∏–Ω–¥–∞–Ω:',
                );
              } else if (item.video != null) {
                await teledart.sendVideo(
                  target,
                  item.video!.fileId,
                  caption: '‚úâÔ∏è –ê–¥–º–∏–Ω–¥–∞–Ω:',
                );
              } else {
                // Fallback: oddiy forward
                await teledart.forwardMessage(target, id, item.messageId);
              }
            }
          }

          await teledart.sendMessage(id, '‚úÖ –ñ–∞–≤–æ–± —é–±–æ—Ä–∏–ª–¥–∏.',
              replyMarkup: ReplyKeyboardRemove(removeKeyboard: true));

          userStates.remove(id);
          adminReplyData.remove(id);
        } else {
          // Media yoki matn qo‚Äòshish
          if (msg.text != null) {
            adminReplyData[id]!.add(msg.text!);
          } else if (msg.photo != null ||
              msg.document != null ||
              msg.video != null) {
            adminReplyData[id]!.add(msg);
          }
        }
        return;
      }
    }

    switch (step) {
      case 'name':
        data['name'] = msg.text;
        state['step'] = 'region';

        await teledart.sendMessage(
          id,
          'üìç –Ø—à–∞—à “≥—É–¥—É–¥–∏–Ω–≥–∏–∑–Ω–∏ —Ç–∞–Ω–ª–∞–Ω–≥:',
          replyMarkup: ReplyKeyboardMarkup(
            keyboard: districts.map((d) => [KeyboardButton(text: d)]).toList(),
            resizeKeyboard: true,
            oneTimeKeyboard: true,
          ),
        );
        break;

      case 'region':
        if (!districts.contains(msg.text)) {
          await teledart.sendMessage(id, '‚ùó –ò–ª—Ç–∏–º–æ—Å, —Ä—û–π—Ö–∞—Ç–¥–∞–Ω —Ç–∞–Ω–ª–∞–Ω–≥.');
          return;
        }

        data['region'] = msg.text;
        state['step'] = 'address';
        await teledart.sendMessage(
          id,
          'üìç –Ø—à–∞—à –º–∞–Ω–∑–∏–ª–∏–Ω–≥–∏–∑–Ω–∏ –∫–∏—Ä–∏—Ç–∏–Ω–≥:',
          replyMarkup: ReplyKeyboardRemove(removeKeyboard: true),
        );
        break;

      case 'address':
        data['address'] = msg.text;
        state['step'] = 'phone';

        await teledart.sendMessage(
          id,
          'üìû –¢–µ–ª–µ—Ñ–æ–Ω —Ä–∞“õ–∞–º–∏–Ω–≥–∏–∑–Ω–∏ –∫–∏—Ä–∏—Ç–∏–Ω–≥ —ë–∫–∏ —Ç—É–≥–º–∞–¥–∞–Ω —Ñ–æ–π–¥–∞–ª–∞–Ω–∏–Ω–≥:',
          replyMarkup: ReplyKeyboardMarkup(
            keyboard: [
              [
                KeyboardButton(
                  text: 'üì≤ –†–∞“õ–∞–º–Ω–∏ —é–±–æ—Ä–∏—à',
                  requestContact: true,
                )
              ]
            ],
            resizeKeyboard: true,
            oneTimeKeyboard: true,
          ),
        );
        break;

      case 'phone':
        String? phone;

        if (msg.contact != null) {
          phone = msg.contact!.phoneNumber;
        } else if (msg.text != null && msg.text!.length >= 7) {
          phone = msg.text!;
        }

        if (phone != null) {
          data['phone'] = phone;
          state['step'] = 'message';
          await teledart.sendMessage(
            id,
            'üí¨ –ê—Ä–∏–∑–∞, —Ç–∞–∫–ª–∏—Ñ —ë–∫–∏ –º—É—Ä–æ–∂–∞–∞—Ç–∏–Ω–≥–∏–∑–Ω–∏ –∫–∏—Ä–∏—Ç–∏–Ω–≥:',
            replyMarkup: ReplyKeyboardRemove(removeKeyboard: true),
          );
        } else {
          await teledart.sendMessage(
            id,
            'üìû–ò–ª—Ç–∏–º–æ—Å, —Ä–∞“õ–∞–º–Ω–∏ —ë–∑–∏–Ω–≥ —ë–∫–∏ üì≤ —Ç—É–≥–º–∞–Ω–∏ –±–æ—Å–∏–Ω–≥:',
          );
        }
        break;

      case 'message':
        data['text'] = msg.text;
        state['step'] = 'await_file_choice';
        await teledart.sendMessage(
          id,
          'üìé “ö—û—à–∏–º—á–∞ —Ñ–∞–π–ª —é–±–æ—Ä–∞—Å–∏–∑–º–∏?',
          replyMarkup: InlineKeyboardMarkup(inlineKeyboard: [
            [
              InlineKeyboardButton(
                  text: 'üìé “≤–∞, –±–æ—Ä', callbackData: 'add_files'),
              InlineKeyboardButton(text: '‚ùå –Å“õ', callbackData: 'no_files'),
            ]
          ]),
        );
        break;

      case 'file':
        if (msg.document != null || msg.photo != null || msg.video != null) {
          await teledart.forwardMessage(adminId, msg.chat.id, msg.messageId);
        }
        break;
    }
  });

  teledart.onCommand('done').listen((msg) async {
    final id = msg.chat.id;
    final state = userStates[id];
    if (state == null) return;

    final d = state['data'] as Map<String, dynamic>;
    state['step'] = 'confirm';

    final summary = '''
üìù –ö–∏—Ä–∏—Ç–∏–ª–≥–∞–Ω –º–∞—ä–ª—É–º–æ—Ç–ª–∞—Ä:
üë§ –ò—Å–º: ${d['name']}
üèò “≤—É–¥—É–¥: ${d['region']}
üìç –ú–∞–Ω–∑–∏–ª: ${d['address']}
üìû –¢–µ–ª–µ—Ñ–æ–Ω: ${d['phone']}
üí¨ –ú—É—Ä–æ–∂–∞–∞—Ç: ${d['text']}
''';

    await teledart.sendMessage(id, summary);
    await teledart.sendMessage(
      id,
      '‚ùì –ú–∞—ä–ª—É–º–æ—Ç–ª–∞—Ä —Ç—û“ì—Ä–∏–º–∏??',
      replyMarkup: InlineKeyboardMarkup(inlineKeyboard: [
        [
          InlineKeyboardButton(
              text: '‚úÖ “≤–∞, —Ç—û“ì—Ä–∏', callbackData: 'confirm_yes'),
          InlineKeyboardButton(
              text: '‚ôªÔ∏è –Å“õ, “õ–∞–π—Ç–∞ –∫–∏—Ä–∏—Ç–∞–º–∞–Ω', callbackData: 'confirm_no'),
        ]
      ]),
    );
  });

  teledart.onCallbackQuery().listen((cb) async {
    final id = cb.from.id;
    final state = userStates[id];
    if (state == null) return;

    final d = state['data'] as Map<String, dynamic>;

    switch (cb.data) {
      case 'add_files':
        state['step'] = 'file';
        await teledart.sendMessage(id,
            'üìé –§–∞–π–ª–ª–∞—Ä–Ω–∏ —é–±–æ—Ä–∏–Ω–≥. –Ø–∫—É–Ω–ª–∞—à —É—á—É–Ω /done –±—É–π—Ä—É“ì–∏–Ω–∏ –±–æ—Å–∏–Ω–≥..');
        break;

      case 'no_files':
        state['step'] = 'confirm';
        final summary = '''
üìù –ö–∏—Ä–∏—Ç–∏–ª–≥–∞–Ω –º–∞—ä–ª—É–º–æ—Ç–ª–∞—Ä:
üë§ –ò—Å–º: ${d['name']}
üèò “≤—É–¥—É–¥: ${d['region']}
üìç –ú–∞–Ω–∑–∏–ª: ${d['address']}
üìû –¢–µ–ª–µ—Ñ–æ–Ω: ${d['phone']}
üí¨ –ú—É—Ä–æ–∂–∞–∞—Ç: ${d['text']}
''';
        await teledart.sendMessage(id, summary);
        await teledart.sendMessage(
          id,
          '‚ùì –ú–∞—ä–ª—É–º–æ—Ç–ª–∞—Ä —Ç—û“ì—Ä–∏–º–∏??',
      replyMarkup: InlineKeyboardMarkup(inlineKeyboard: [
        [
          InlineKeyboardButton(
              text: '‚úÖ “≤–∞, —Ç—û“ì—Ä–∏', callbackData: 'confirm_yes'),
          InlineKeyboardButton(
              text: '‚ôªÔ∏è –Å“õ, “õ–∞–π—Ç–∞ –∫–∏—Ä–∏—Ç–∞–º–∞–Ω', callbackData: 'confirm_no'),
        ]
          ]),
        );
        break;

      case 'confirm_yes':
        final finalSummary = '''
üÜï –Ø–Ω–≥–∏ –º—É—Ä–æ–∂–∞–∞—Ç:
üÜî –¢–µ–ª–µ–≥—Ä–∞–º –ò–î $id
üë§ –ò—Å–º: ${d['name']}
üèò “≤—É–¥—É–¥: ${d['region']}
üìç –ú–∞–Ω–∑–∏–ª: ${d['address']}
üìû –¢–µ–ª–µ—Ñ–æ–Ω: ${d['phone']}
üí¨ –ú—É—Ä–æ–∂–∞–∞—Ç: ${d['text']}

‚úçÔ∏è –ñ–∞–≤–æ–±: /reply $id
''';

        await teledart.sendMessage(adminId, finalSummary);
        await teledart.sendMessage(id,
            '‚úÖ –ú—É—Ä–æ–∂–∞–∞—Ç–∏–Ω–≥–∏–∑ “õ–∞–±—É–ª “õ–∏–ª–∏–Ω–¥–∏. –ë–µ–ª–≥–∏–ª–∞–Ω–≥–∞–Ω –º—É–¥–¥–∞—Ç –∏—á–∏–¥–∞ –∫—û—Ä–∏–± —á–∏“õ–∏–ª–∏–±, –º—É–∞—É–ª–∏—Ñ–≥–∞ –º–∞—ä–ª—É–º “õ–∏–ª–∏–Ω–∞–¥–∏.');
        userStates.remove(id);
        break;

      case 'confirm_no':
        await teledart.sendMessage(
            id, '‚ôªÔ∏è “ö–∞–π—Ç–∞ –±–æ—à–ª–∞—à —É—á—É–Ω /start –Ω–∏ –±–æ—Å–∏–Ω–≥.');
        userStates.remove(id);
        break;
    }

    await teledart.answerCallbackQuery(cb.id);
  });
}
